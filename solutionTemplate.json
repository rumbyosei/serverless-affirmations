{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "IaC solution in order to deploy serverless affirmations ",
  "Parameters" : {
    "Email" : {
      "Type" : "String",
      "Description" : "Email to send messages too",
      }
    },
  "Resources" : {
    "NotificationTopic": {
      "Type" : "AWS::SNS::Topic",
      "Properties" : {
        "DisplayName" : "Serverless Affirmations",
        "Subscription" : [
          {
            "Endpoint" : { "Ref": "Email"},
            "Protocol" : "email"
          }
        ],
        "TopicName" : "serverlessAffirmations"
      },
    },

    "notifiationLambda" : {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
          "Code": {
            "ZipFile": "def sendAffirmations(event, context):\n return 'Add your code!'"
          },
          "Environment" : {
            "Variables" : {"topicARN" : { "Ref" : "NotificationTopic" } }
          },
          "FunctionName" : "serverlessAffirmations",
          "Handler" : "index.sendAffirmations",
          "MemorySize" : 128,
          "Role" : {"Fn::GetAtt" : ["lambdaRole", "Arn"] },
          "Runtime" : "python3.8",
          "Timeout" : 30
        }
    },
    "lambdaRole": {
      "Type" : "AWS::IAM::Role",
      "Properties" : {
          "ManagedPolicyArns" : [
            "arn:aws:iam::aws:policy/AmazonSNSFullAccess",
          ],
          "RoleName" : "serverlessAffirmationsRole",
          "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
        }
    },
    "lambdaTrigger": {
      "Type" : "AWS::Events::Rule",
      "Properties" : {
          "Description" : "Alarm to send notifications",
          "Name" : "serverlessAffirmations",
          "ScheduleExpression" : "rate(1 day)",
          "State" : "ENABLED",
          "Targets" : [
            {
                "Arn": {"Fn::GetAtt" : ["notifiationLambda", "Arn"] },
                "Id": "affirmationLambda"
            }
          ]
        }

    }

  }
}
